
lam(s, m1, m2) = sqrt( (s - (m1+m2)^2) * (s - (m1-m2)^2) + 0im )

# loop function
function jbar(s, m)
    _msq = m^2
    nu = sqrt(s*(s - 4m^2) + 0im)
    return ( 4 + nu/s * (log((s-nu)/s - 1im*ϵ) - log((-s-nu)/s - 1im*ϵ)
                - log((s+nu)/s + 1im*ϵ) + log((-s+nu)/s + 1im*ϵ)) )/(32π^2)
end

function jbar(s, m1, m2)
    if m1 == m2
        res = jbar(s, m1)
    else
        _m1sq, _m2sq = m1^2, m2^2
        Δ, Σ = _m1sq - _m2sq, _m1sq + _m2sq
        nu = lam(s, m1, m2)
        fac = Σ/Δ * log(_m1sq/_m2sq)
        res = 1/(32π^2) * ( 2 + Δ/s * log(_m2sq/_m1sq) + fac
            + nu/s * (log((s-Δ-nu)/s - 1im*ϵ) - log((-s-Δ-nu)/s - 1im*ϵ)
                    - log((s-Δ+nu)/s + 1im*ϵ) + log((-s-Δ+nu)/s + 1im*ϵ)) )
    end
    return res
end


chiral_log(m) = log(m^2/μ^2)/32 * (m/(π*fpi))^2

jbbar(s, m) = jbar(s, m) - s /(96π*m^2)

function jbbar(s, m1, m2)
    if m1 == m2
        return jbbar(s, m1)
    else
        _m1sq, _m2sq = m1^2, m2^2
        Δ, Σ = _m1sq - _m2sq, _m1sq + _m2sq
        return jbar(s, m1, m2) - s/Δ^2 * (Σ/(32π^2) + 2fpi^2 * (_m1sq * chiral_log(m2) - _m2sq* chiral_log(m1))/Δ )
    end
#     return res
end

qcm(s, m1, m2) = lam(s, m1, m2)/(2sqrt(s))

function tu(ch1::TwoBodyChannel, ch2::TwoBodyChannel, s, x)
    _m1sq, _m2sq, _m3sq, _m4sq = ch1.m1^2, ch1.m2^2, ch2.m1^2, ch2.m2^2
    _q12 = qcm(s, ch1.m1, ch1.m2)
    _q34 = qcm(s, ch2.m1, ch2.m2)
    _t = _m1sq + _m3sq - 2sqrt(_m1sq+_q12^2)*sqrt(_m3sq+_q34^2) + 2x *_q12*_q34
    _u = _m1sq + _m2sq + _m3sq + _m4sq - s - _t
    return _t, _u
end


# chiral logs
const mupi = chiral_log(mpi)
const muk = chiral_log(mk)
const mueta = chiral_log(meta);

#-------------- I = 0 --------------
# channels --- 1: pi pi; 2: KK bar; 3: eta eta
#-------------- O(p^2 & p^4) -----------------
function V2_I0_ππππ(s, x)
    t, u = tu(ππ, ππ, s, x)
    return ((3 * ( - mpi^2 + s)) / fpi^2 + ( - mpi^2 + t) / fpi^2 + ( - mpi^2 + u) / fpi^2) / 2.0
end

function V4_I0_ππππ(s, x, lecr)
    t, u = tu(ππ, ππ, s, x)
    return (( - 2 * mpi^4 * mueta) / (9.0 * fpi^2 * meta^2) - (mupi * (9 * mpi^4 - 4 * mpi^2 * t + 4 * t^2 - 4 * s * u)) / (3.0 * fpi^2 * mpi^2) - (muk * (2 * mpi^2 * t + t^2 - s * u)) / (6.0 * fpi^2 * mk^2) + ( - 56 * mpi^4 + 30 * (mpi^2 - t) * t + 21 * s * u) / (576.0 * fpi^4 * pi^2) + ( - 56 * mpi^4 + 21 * s * t + 30 * (mpi^2 - u) * u) / (576.0 * fpi^4 * pi^2) - (muk * ( - (s * t) + 2 * mpi^2 * u + u^2)) / (6.0 * fpi^2 * mk^2) - (mupi * (9 * mpi^4 - 4 * s * t - 4 * mpi^2 * u + 4 * u^2)) / (3.0 * fpi^2 * mpi^2) + ((( - 4 * mk^2 + s) * ( - 4 * mpi^2 + s + 2 * u) * jbar(s, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 + s - 2 * t) + s * (s - t)) * jbar(s, mpi, mpi)) / (6.0 * fpi^4) + ((( - 4 * mk^2 + s) * ( - 4 * mpi^2 + s + 2 * t) * jbar(s, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 + s - 2 * u) + s * (s - u)) * jbar(s, mpi, mpi)) / (6.0 * fpi^4) + ((mpi^4 * jbar(t, meta, meta)) / 9.0 + (t^2 * jbar(t, mk, mk)) / 4.0 + ( - mpi^4 + t^2) * jbar(t, mpi, mpi)) / (2.0 * fpi^4) + ((( - 4 * mk^2 + t) * ( - 4 * mpi^2 + t + 2 * u) * jbar(t, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 - 2 * s + t) + t * ( - s + t)) * jbar(t, mpi, mpi)) / (6.0 * fpi^4) + ((mpi^4 * jbar(u, meta, meta)) / 9.0 + (u^2 * jbar(u, mk, mk)) / 4.0 + ( - mpi^4 + u^2) * jbar(u, mpi, mpi)) / (2.0 * fpi^4) + ((( - 4 * mk^2 + u) * ( - 4 * mpi^2 + 2 * t + u) * jbar(u, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 - 2 * s + u) + u * ( - s + u)) * jbar(u, mpi, mpi)) / (6.0 * fpi^4) + (4 * ((( - 2 * mpi^2 + s)^2 + ( - 2 * mpi^2 + u)^2) * lecr[2] + ( - 2 * mpi^2 + t)^2 * (2 * lecr[1] + lecr[3]))) / fpi^4 + (4 * ((( - 2 * mpi^2 + s)^2 + ( - 2 * mpi^2 + t)^2) * lecr[2] + ( - 2 * mpi^2 + u)^2 * (2 * lecr[1] + lecr[3]))) / fpi^4 + (8 * mpi^2 * (t * (2 * lecr[4] + lecr[5]) + 2 * mpi^2 * ( - 2 * lecr[4] - lecr[5] + 2 * lecr[6] + lecr[8]))) / fpi^4 + (8 * mpi^2 * (u * (2 * lecr[4] + lecr[5]) + 2 * mpi^2 * ( - 2 * lecr[4] - lecr[5] + 2 * lecr[6] + lecr[8]))) / fpi^4 + 3 * ( - (mpi^4 * mueta) / (9.0 * fpi^2 * meta^2) - (mupi * (9 * mpi^4 - 4 * mpi^2 * s + 4 * s^2 - 4 * t * u)) / (3.0 * fpi^2 * mpi^2) - (muk * (2 * mpi^2 * s + s^2 - t * u)) / (6.0 * fpi^2 * mk^2) + ( - 56 * mpi^4 + 30 * (mpi^2 - s) * s + 21 * t * u) / (576.0 * fpi^4 * pi^2) + ((mpi^4 * jbar(s, meta, meta)) / 9.0 + (s^2 * jbar(s, mk, mk)) / 4.0 + ( - mpi^4 + s^2) * jbar(s, mpi, mpi)) / (2.0 * fpi^4) + ((( - 4 * mk^2 + t) * ( - 4 * mpi^2 + 2 * s + t) * jbar(t, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 + t - 2 * u) + t * (t - u)) * jbar(t, mpi, mpi)) / (6.0 * fpi^4) + ((( - 4 * mk^2 + u) * ( - 4 * mpi^2 + 2 * s + u) * jbar(u, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 - 2 * t + u) + u * ( - t + u)) * jbar(u, mpi, mpi)) / (6.0 * fpi^4) + (4 * ((( - 2 * mpi^2 + t)^2 + ( - 2 * mpi^2 + u)^2) * lecr[2] + ( - 2 * mpi^2 + s)^2 * (2 * lecr[1] + lecr[3]))) / fpi^4 + (8 * mpi^2 * (s * (2 * lecr[4] + lecr[5]) + 2 * mpi^2 * ( - 2 * lecr[4] - lecr[5] + 2 * lecr[6] + lecr[8]))) / fpi^4)) / 2.0
end


function V2_I0_ππkk(s, x)
    t, u = tu(ππ, KK, s, x)
    return (sqrt(3) * ((mk^2 + mpi^2 - t) / (2.0 * fpi^2) + (mk^2 + mpi^2 - u) / (2.0 * fpi^2))) / 2.0
end

function V4_I0_ππkk(s, x, lecr)
    t, u = tu(ππ, KK, s, x)
    return (sqrt(3) * (( - 27 * mk^4 + 3 * s * ( - 10 * s + t) - 3 * mpi^2 * (mpi^2 + s - 2 * t - 3 * u) - 6 * t * u - 3 * u^2 + mk^2 * ( - 34 * mpi^2 - 3 * s + 30 * t + 21 * u)) / (1152.0 * fpi^4 * pi^2) + ( - 27 * mk^4 - 3 * t^2 - 3 * mpi^2 * (mpi^2 + s - 3 * t - 2 * u) - 6 * t * u + 3 * s * ( - 10 * s + u) + mk^2 * ( - 34 * mpi^2 - 3 * s + 21 * t + 30 * u)) / (1152.0 * fpi^4 * pi^2) + (muk * (42 * mk^6 + 4 * mk^4 * (12 * mpi^2 - 13 * t - 8 * u) - mpi^2 * (2 * mk^2 - s) * ( - 9 * mpi^2 + 5 * t + 4 * u) + mk^2 * (11 * t^2 - 3 * mpi^2 * (8 * mpi^2 + t - u) + 12 * t * u + 7 * u^2))) / (12.0 * fpi^2 * mk^2 * ( - mk^2 + mpi^2)) + (muk * (42 * mk^6 + 4 * mk^4 * (12 * mpi^2 - 8 * t - 13 * u) - mpi^2 * (2 * mk^2 - s) * ( - 9 * mpi^2 + 4 * t + 5 * u) + mk^2 * (7 * t^2 + 12 * t * u + 11 * u^2 - 3 * mpi^2 * (8 * mpi^2 - t + u)))) / (12.0 * fpi^2 * mk^2 * ( - mk^2 + mpi^2)) + (mupi * ( - 66 * mpi^6 + 2 * mk^2 * (2 * mpi^2 - s) * ( - 12 * mk^2 + 5 * t + 7 * u) + mpi^4 * ( - 78 * mk^2 + 53 * t + 85 * u) - mpi^2 * (25 * t^2 + 21 * t * u + 26 * u^2 - 3 * mk^2 * (16 * mk^2 + 5 * t + u)))) / (24.0 * fpi^2 * mpi^2 * ( - mk^2 + mpi^2)) + (mueta * (81 * meta^6 + 41 * mpi^6 - 18 * mpi^4 * (t + u) + meta^2 * ( - 59 * mpi^4 + 36 * t * ( - t + u) + 9 * mpi^2 * (5 * t + u)) - 3 * meta^4 * ( - 43 * mpi^2 + 9 * (t + 5 * u)))) / (72.0 * fpi^2 * meta^2 * (meta^2 - mpi^2)) + (mueta * (81 * meta^6 + 41 * mpi^6 - 18 * mpi^4 * (t + u) - 3 * meta^4 * ( - 43 * mpi^2 + 9 * (5 * t + u)) + meta^2 * ( - 59 * mpi^4 + 36 * (t - u) * u + 9 * mpi^2 * (t + 5 * u)))) / (72.0 * fpi^2 * meta^2 * (meta^2 - mpi^2)) + (mupi * ( - 66 * mpi^6 + 2 * mk^2 * (2 * mpi^2 - s) * ( - 12 * mk^2 + 7 * t + 5 * u) + mpi^4 * ( - 78 * mk^2 + 85 * t + 53 * u) - mpi^2 * (26 * t^2 + 21 * t * u + 25 * u^2 - 3 * mk^2 * (16 * mk^2 + t + 5 * u)))) / (24.0 * fpi^2 * mpi^2 * ( - mk^2 + mpi^2)) - (mpi^2 * (6 * meta^2 + 2 * mpi^2 - 9 * s) * jbar(s, meta, meta)) / (36.0 * fpi^4) + (( - 4 * mk^4 + s * (mpi^2 + 4 * s - t) + mk^2 * ( - 4 * mpi^2 + 3 * s + 4 * t)) * jbar(s, mk, mk)) / (24.0 * fpi^4) + (( - 4 * mk^4 + s * (mpi^2 + 4 * s - u) + mk^2 * ( - 4 * mpi^2 + 3 * s + 4 * u)) * jbar(s, mk, mk)) / (24.0 * fpi^4) + (( - 8 * mpi^4 + s * (2 * mk^2 + 5 * s - 2 * t) + mpi^2 * ( - 8 * mk^2 + 3 * s + 8 * t)) * jbar(s, mpi, mpi)) / (24.0 * fpi^4) + (( - 8 * mpi^4 + s * (2 * mk^2 + 5 * s - 2 * u) + mpi^2 * ( - 8 * mk^2 + 3 * s + 8 * u)) * jbar(s, mpi, mpi)) / (24.0 * fpi^4) + ((29 * mk^4 + 38 * mpi^4 - mpi^2 * ( - 48 * meta^2 + 36 * t) + 2 * mk^2 * ( - 51 * meta^2 - 74 * mpi^2 + 18 * t + 27 * u) - 9 * (meta^4 - 6 * meta^2 * u + 3 * t * ( - t + u))) * jbar(t, mk, meta)) / (432.0 * fpi^4) - ((2 * mk^6 + 10 * meta^2 * mpi^4 + 3 * meta^4 * u + mk^4 * (10 * meta^2 - 4 * mpi^2 + 3 * u) - 2 * mk^2 * (3 * meta^4 + 2 * mpi^4 + meta^2 * (4 * mpi^2 + 3 * u))) * jbar(t, mk, meta)) / (48.0 * fpi^4 * t) + ((mk^2 + mpi^2 - t)^2 * jbar(t, mpi, mk)) / (4.0 * fpi^4) - ((mk^2 - mpi^2)^2 * ( - 2 * mk^2 - 2 * mpi^2 + u) * jbar(t, mpi, mk)) / (16.0 * fpi^4 * t) - ((5 * mk^4 + 5 * mpi^4 + t * ( - 5 * t + u) - 2 * mpi^2 * ( - 2 * t + u) - 2 * mk^2 * (5 * mpi^2 - 2 * t + u)) * jbar(t, mpi, mk)) / (16.0 * fpi^4) - ((2 * mk^6 + 10 * meta^2 * mpi^4 + 3 * meta^4 * t + mk^4 * (10 * meta^2 - 4 * mpi^2 + 3 * t) - 2 * mk^2 * (3 * meta^4 + 2 * mpi^4 + meta^2 * (4 * mpi^2 + 3 * t))) * jbar(u, mk, meta)) / (48.0 * fpi^4 * u) + ((29 * mk^4 + 38 * mpi^4 + 2 * mk^2 * ( - 51 * meta^2 - 74 * mpi^2 + 27 * t + 18 * u) - mpi^2 * ( - 48 * meta^2 + 36 * u) - 9 * (meta^4 - 6 * meta^2 * t + 3 * (t - u) * u)) * jbar(u, mk, meta)) / (432.0 * fpi^4) + ((mk^2 + mpi^2 - u)^2 * jbar(u, mpi, mk)) / (4.0 * fpi^4) - ((mk^2 - mpi^2)^2 * ( - 2 * mk^2 - 2 * mpi^2 + t) * jbar(u, mpi, mk)) / (16.0 * fpi^4 * u) - ((5 * mk^4 + 5 * mpi^4 - 2 * mpi^2 * (t - 2 * u) - 2 * mk^2 * (5 * mpi^2 + t - 2 * u) + (t - 5 * u) * u) * jbar(u, mpi, mk)) / (16.0 * fpi^4) + ((mk^2 - mpi^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(t, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(t, mpi, mk))) / (8.0 * fpi^4 * t^2) + ((mk^2 - mpi^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(u, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(u, mpi, mk))) / (8.0 * fpi^4 * u^2) + (2 * (2 * ( - mk^2 - mpi^2 + t)^2 * lecr[2] + ( - 2 * mk^2 + s) * ( - 2 * mpi^2 + s) * (4 * lecr[1] + lecr[3]) + ( - mk^2 - mpi^2 + u)^2 * (2 * lecr[2] + lecr[3]) + 4 * (mpi^2 * s + mk^2 * ( - 4 * mpi^2 + s)) * lecr[4] - 2 * mpi^2 * (mk^2 - mpi^2 + t) * lecr[5] + 8 * mk^2 * mpi^2 * (2 * lecr[6] + lecr[8]))) / fpi^4 + (2 * (2 * ( - mk^2 - mpi^2 + u)^2 * lecr[2] + ( - 2 * mk^2 + s) * ( - 2 * mpi^2 + s) * (4 * lecr[1] + lecr[3]) + ( - mk^2 - mpi^2 + t)^2 * (2 * lecr[2] + lecr[3]) + 4 * (mpi^2 * s + mk^2 * ( - 4 * mpi^2 + s)) * lecr[4] - 2 * mpi^2 * (mk^2 - mpi^2 + u) * lecr[5] + 8 * mk^2 * mpi^2 * (2 * lecr[6] + lecr[8]))) / fpi^4)) / 2.0
end


function V2_I0_ππηη(s, x)
    t, u = tu(ππ, ηη, s, x)
    return - mpi^2 / (2.0 * sqrt(3) * fpi^2)
end

function V4_I0_ππηη(s, x, lecr)
    t, u = tu(ππ, ηη, s, x)
    return - (sqrt(3) * (((4 * meta^4 * mpi^2 - meta^2 * mpi^4 + mpi^6) * mueta) / (9.0 * fpi^2 * meta^2 * ( - meta^2 + mpi^2)) - (mupi * ( - 9 * meta^2 * mpi^2 + 13 * mpi^4 + 6 * ( - meta^2 + mpi^2) * s)) / (9.0 * fpi^2 * ( - meta^2 + mpi^2)) + (77 * mpi^4 + mpi^2 * (154 * meta^2 - 72 * s) - 9 * ( - 9 * meta^4 + 8 * meta^2 * s + 3 * (t^2 + t * u + u^2))) / (576.0 * fpi^4 * pi^2) - (muk * ( - 25 * mpi^4 + 20 * mpi^2 * ( - 3 * meta^2 + s) + 3 * ( - 9 * meta^4 + 8 * meta^2 * s + 3 * (t^2 + t * u + u^2)))) / (6.0 * fpi^2 * mk^2) + ((mpi^2 * (16 * mk^2 - 7 * mpi^2) * jbar(s, meta, meta)) / 9.0 + (s * ( - 6 * meta^2 - 2 * mpi^2 + 9 * s) * jbar(s, mk, mk)) / 4.0 + mpi^2 * ( - mpi^2 + 2 * s) * jbar(s, mpi, mpi)) / (6.0 * fpi^4) + ((( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * t)^2 * jbar(t, mk, mk)) / 24.0 + mpi^4 * jbar(t, mpi, meta)) / (9.0 * fpi^4) + ((( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * u)^2 * jbar(u, mk, mk)) / 24.0 + mpi^4 * jbar(u, mpi, meta)) / (9.0 * fpi^4) + (4 * (2 * ( - 2 * meta^2 + s) * ( - 2 * mpi^2 + s) * (lecr[1] + lecr[3] / 6.0) + (( - meta^2 - mpi^2 + t)^2 + ( - meta^2 - mpi^2 + u)^2) * (lecr[2] + lecr[3] / 3.0))) / fpi^4 + (8 * (( - 4 * meta^2 * mpi^2 + (meta^2 + mpi^2) * s) * lecr[4] + 2 * meta^2 * mpi^2 * ( - lecr[5] / 3.0 + 2 * lecr[6]) + 4 * mpi^2 * ( - meta^2 + mpi^2) * lecr[7] + 2 * mpi^4 * lecr[8])) / fpi^4)) / 2.0

end


function V2_I0_kkkk(s, x)
    t, u = tu(KK, KK, s, x)
    return (3 * (2 * mk^2 - u)) / (2.0 * fpi^2)
end

function V4_I0_kkkk(s, x, lecr)
    t, u = tu(KK, KK, s, x)
    return (mueta * (14 * mk^2 - mpi^2 - ( - 2 * mpi^2 + 9 * s)^2 / (12.0 * meta^2) + (8 * mk^2 * (2 * mk^2 + 3 * s - 6 * t) - 9 * (s^2 - 2 * t^2)) / (2.0 * ( - meta^2 + mpi^2)) + 9 * (s - u))) / (12.0 * fpi^2) + ( - 1648 * mk^4 + 186 * s * t + 1032 * mk^2 * u - 177 * u^2) / (2304.0 * fpi^4 * pi^2) - (muk * ( - 8 * mk^4 + 5 * (s^2 + s * t + t^2) - 13 * mk^2 * u + 6 * u^2)) / (6.0 * fpi^2 * mk^2) - (muk * (36 * mk^4 + 5 * s^2 - s * u + 8 * u^2 - 2 * mk^2 * (s + 16 * u))) / (12.0 * fpi^2 * mk^2) + (mupi * (5 * ( - 2 * mk^2 + u) - ( - 32 * mk^4 + 11 * s^2 + 8 * s * t + 11 * t^2 + 8 * mk^2 * u) / (24.0 * mpi^2) + ( - 64 * mk^4 + 9 * (s^2 + t^2) + 24 * mk^2 * u) / (16.0 * (mk^2 - mpi^2)))) / (2.0 * fpi^2) + (mueta * (64 * mk^2 - 2 * mpi^2 - (8 * mpi^4 - 36 * mpi^2 * (s + t) + 81 * (s^2 + t^2)) / (12.0 * meta^2) - 27 * u + ( - 64 * mk^4 + 9 * (s^2 + t^2) + 24 * mk^2 * u) / (2.0 * ( - meta^2 + mpi^2)))) / (12.0 * fpi^2) - ( - 4 * mk^2 * ( - 80 * mk^2 + 30 * s + 57 * u) + 3 * (31 * s^2 + 4 * s * u + 16 * u^2)) / (2304.0 * fpi^4 * pi^2) + (mupi * ((16 * mk^4 + 24 * mk^2 * (s - 2 * t) - 9 * (s^2 - 2 * t^2)) / (8.0 * (mk^2 - mpi^2)) + 5 * ( - 2 * mk^2 + u) - (11 * s^2 + 4 * t^2 - 8 * mk^2 * (s + 2 * t) + 4 * s * (2 * t + u)) / (12.0 * mpi^2))) / (4.0 * fpi^2) + (( - 6 * meta^2 - 2 * mpi^2 + 9 * s)^2 * jbar(s, meta, meta)) / (288.0 * fpi^4) + ((4 * mk^2 * (2 * mk^2 - t) + s * (s - u)) * jbar(s, mk, mk)) / (6.0 * fpi^4) - (( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * s)^2 * jbar(s, mpi, meta)) / (432.0 * fpi^4) + ((s * (8 * mk^2 + 7 * s - 4 * t) + 8 * mpi^2 * ( - 4 * mk^2 + s + 2 * t)) * jbar(s, mpi, mpi)) / (96.0 * fpi^4) + (( - 6 * meta^2 - 2 * mpi^2 + 9 * s)^2 * jbar(s, meta, meta) + 60 * ( - 8 * mk^4 + s * (2 * s + t) + 4 * mk^2 * u) * jbar(s, mk, mk) + (2 * ( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * s)^2 * jbar(s, mpi, meta)) / 3.0 + 3 * ( - 8 * mpi^2 * ( - 4 * mk^2 + s + 2 * t) + s * ( - 8 * mk^2 + 11 * s + 4 * t)) * jbar(s, mpi, mpi)) / (288.0 * fpi^4) + (( - 8 * mk^4 + t * (s + 2 * t) + 4 * mk^2 * u) * jbar(t, mk, mk)) / (24.0 * fpi^4) + (( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * t)^2 * jbar(t, mpi, meta)) / (216.0 * fpi^4) + (( - 4 * mpi^2 + t) * ( - 4 * mk^2 + 2 * s + t) * jbar(t, mpi, mpi)) / (24.0 * fpi^4) + (( - 6 * meta^2 - 2 * mpi^2 + 9 * t)^2 * jbar(t, meta, meta) + 60 * ( - 8 * mk^4 + t * (s + 2 * t) + 4 * mk^2 * u) * jbar(t, mk, mk) + (2 * ( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * t)^2 * jbar(t, mpi, meta)) / 3.0 + 3 * ( - 8 * mpi^2 * ( - 4 * mk^2 + 2 * s + t) + t * ( - 8 * mk^2 + 4 * s + 11 * t)) * jbar(t, mpi, mpi)) / (288.0 * fpi^4) + (3 * ( - 2 * mk^2 + u)^2 * jbar(u, mk, mk)) / (4.0 * fpi^4) + (2 * (2 * ( - 2 * mk^2 + u)^2 * lecr[2] + ( - 2 * mk^2 + s)^2 * (4 * lecr[1] + lecr[3]) + ( - 2 * mk^2 + t)^2 * (2 * lecr[2] + lecr[3]))) / fpi^4 + (4 * (2 * ( - 2 * mk^2 + u)^2 * lecr[2] + (( - 2 * mk^2 + s)^2 + ( - 2 * mk^2 + t)^2) * (2 * lecr[1] + lecr[2] + lecr[3]) - 4 * mk^2 * u * lecr[4] - 2 * mpi^2 * ( - 2 * mk^2 + u) * lecr[5] - 4 * mk^4 * (lecr[5] - 2 * (2 * lecr[6] + lecr[8])))) / fpi^4 + (4 * (4 * mk^2 * s * lecr[4] - mpi^2 * ( - 2 * mk^2 + u) * lecr[5] - 2 * mk^4 * (4 * lecr[4] + lecr[5] - 2 * (2 * lecr[6] + lecr[8])))) / fpi^4
end


function V2_I0_kkηη(s, x)
    t, u = tu(KK, ηη, s, x)
    return - ( - 6 * meta^2 - 2 * mpi^2 + 9 * s) / (12 * fpi^2)
end

function V4_I0_kkηη(s, x, lecr)
    t, u = tu(KK, ηη, s, x)
    return (mupi * ( - 84 * mk^4 + 2 * mk^2 * (26 * meta^2 + 69 * s) + 3 * (16 * meta^4 - 50 * meta^2 * s + (t - u)^2))) / (48.0 * fpi^2 * ( - meta^2 + mk^2)) - (mueta * (144 * meta^6 - 128 * mk^6 + 144 * mk^4 * s + 2 * meta^4 * ( - 166 * mk^2 + 153 * s) + meta^2 * (428 * mk^4 - 486 * mk^2 * s + 27 * (t - u)^2))) / (144.0 * fpi^2 * meta^2 * ( - meta^2 + mk^2)) + (muk * (92 * mk^6 - 81 * meta^2 * s^2 - 60 * mk^4 * (meta^2 + 3 * s) + 18 * mk^2 * (8 * meta^4 + 6 * meta^2 * s + 5 * s^2 - 2 * t * u))) / (72.0 * fpi^2 * mk^2 * ( - meta^2 + mk^2)) - (116 * mk^4 + mk^2 * (184 * meta^2 - 153 * s) - 9 * (4 * meta^4 - 3 * meta^2 * s + 10 * s^2 + 2 * t * u)) / (2304.0 * fpi^4 * pi^2) - ((16 * mk^2 - 7 * mpi^2) * ( - 6 * meta^2 - 2 * mpi^2 + 9 * s) * jbar(s, meta, meta)) / (216.0 * fpi^4) - (s * ( - 6 * meta^2 - 2 * mpi^2 + 9 * s) * jbar(s, mk, mk)) / (16.0 * fpi^4) - (mpi^2 * s * jbar(s, mpi, mpi)) / (8.0 * fpi^4) - ((( - meta^2 + mk^2)^2 * ( - 6 * meta^2 - 18 * mk^2 + 4 * mpi^2 - 3 * u) * jbar(t, mk, meta)) / t + ((45 * meta^4 + 189 * mk^4 + 8 * mpi^4 + 12 * mpi^2 * ( - 2 * meta^2 + 3 * t) - 18 * mk^2 * (9 * meta^2 + 4 * mpi^2 + 6 * t - 3 * u) + 27 * t * (t - u) + 54 * meta^2 * u) * jbar(t, mk, meta)) / 9.0 + ((18 * meta^4 + 29 * mk^4 + 11 * mpi^4 + 27 * t * (t - u) + 6 * mpi^2 * (8 * meta^2 - 6 * t + 9 * u) + 2 * mk^2 * ( - 78 * meta^2 - 47 * mpi^2 + 18 * t + 27 * u)) * jbar(t, mpi, mk)) / 9.0 - ((2 * mk^6 - 2 * mk^2 * mpi^2 * (4 * meta^2 + 5 * mpi^2 + 3 * u) + mk^4 * ( - 8 * meta^2 + 14 * mpi^2 + 3 * u) + mpi^2 * (6 * meta^4 + mpi^2 * (4 * meta^2 + 3 * u))) * jbar(t, mpi, mk)) / t + (6 * ( - meta^2 + mk^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(t, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(t, mpi, mk))) / t^2) / (32.0 * fpi^4) - ((( - meta^2 + mk^2)^2 * ( - 6 * meta^2 - 18 * mk^2 + 4 * mpi^2 - 3 * t) * jbar(u, mk, meta)) / u + ((45 * meta^4 + 189 * mk^4 + 8 * mpi^4 + 54 * meta^2 * t + 27 * u * ( - t + u) + 12 * mpi^2 * ( - 2 * meta^2 + 3 * u) - 18 * mk^2 * (9 * meta^2 + 4 * mpi^2 - 3 * t + 6 * u)) * jbar(u, mk, meta)) / 9.0 - ((2 * mk^6 - 2 * mk^2 * mpi^2 * (4 * meta^2 + 5 * mpi^2 + 3 * t) + mk^4 * ( - 8 * meta^2 + 14 * mpi^2 + 3 * t) + mpi^2 * (6 * meta^4 + mpi^2 * (4 * meta^2 + 3 * t))) * jbar(u, mpi, mk)) / u + ((18 * meta^4 + 29 * mk^4 + 11 * mpi^4 + 6 * mpi^2 * (8 * meta^2 + 9 * t - 6 * u) + 27 * u * ( - t + u) + 2 * mk^2 * ( - 78 * meta^2 - 47 * mpi^2 + 27 * t + 18 * u)) * jbar(u, mpi, mk)) / 9.0 + (6 * ( - meta^2 + mk^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(u, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(u, mpi, mk))) / u^2) / (32.0 * fpi^4) - ((( - meta^2 - mk^2 + t)^2 + ( - meta^2 - mk^2 + u)^2) * (12 * lecr[2] + lecr[3]) + 2 * (2 * meta^2 - s) * (2 * mk^2 - s) * (12 * lecr[1] + 5 * lecr[3])) / (3.0 * fpi^4) + (2 * (12 * meta^4 + 3 * mpi^4 + mpi^2 * (5 * meta^2 - 9 * s)) * lecr[5]) / (3.0 * fpi^4) - (4 * (2 * (meta^2 + mk^2) * s * lecr[4] + 8 * meta^2 * mk^2 * ( - lecr[4] + lecr[6]) + 2 * (3 * meta^4 - 4 * meta^2 * mpi^2 + mpi^4) * lecr[7] + (6 * meta^4 - 3 * meta^2 * mpi^2 + mpi^4) * lecr[8])) / fpi^4
end


function V2_I0_ηηηη(s, x)
    t, u = tu(ηη, ηη, s, x)
    return (16 * mk^2 - 7 * mpi^2) / (18 * fpi^2)
end

function V4_I0_ηηηη(s, x, lecr)
    t, u = tu(ηη, ηη, s, x)
    return ( - ((24 * meta^4 - 8 * meta^2 * mpi^2 + mpi^4) * mueta) / (3.0 * fpi^2 * meta^2) + (( - 48 * meta^2 + 7 * mpi^2) * mupi) / (9.0 * fpi^2) - (16 * (23 * meta^4 - 22 * meta^2 * mk^2 + 10 * mk^4) + 27 * ( - 4 * meta^2 * t + t^2 - s * u)) / (192.0 * fpi^4 * pi^2) - (muk * (378 * meta^4 - 48 * meta^2 * mpi^2 + 14 * mpi^4 + 81 * ( - 4 * meta^2 * t + t^2 - s * u))) / (18.0 * fpi^2 * mk^2) + (((16 * mk^2 - 7 * mpi^2)^2 * jbar(s, meta, meta)) / 27.0 + (( - 6 * meta^2 - 2 * mpi^2 + 9 * s)^2 * jbar(s, mk, mk)) / 12.0 + mpi^4 * jbar(s, mpi, mpi)) / (6.0 * fpi^4) + (((16 * mk^2 - 7 * mpi^2)^2 * jbar(t, meta, meta)) / 27.0 + (( - 6 * meta^2 - 2 * mpi^2 + 9 * t)^2 * jbar(t, mk, mk)) / 12.0 + mpi^4 * jbar(t, mpi, mpi)) / (6.0 * fpi^4) + (((16 * mk^2 - 7 * mpi^2)^2 * jbar(u, meta, meta)) / 27.0 + (( - 6 * meta^2 - 2 * mpi^2 + 9 * u)^2 * jbar(u, mk, mk)) / 12.0 + mpi^4 * jbar(u, mpi, mpi)) / (6.0 * fpi^4) + (4 * ( - 4 * meta^4 + s^2 + t^2 + u^2) * (2 * lecr[1] + 2 * lecr[2] + lecr[3])) / fpi^4 - (8 * (12 * meta^4 * lecr[4] + (13 * meta^4 - 10 * meta^2 * mpi^2 + 3 * mpi^4) * lecr[5] - 36 * meta^4 * lecr[6] - 24 * (2 * meta^4 - 3 * meta^2 * mpi^2 + mpi^4) * lecr[7] - 6 * (7 * meta^4 - 6 * meta^2 * mpi^2 + 2 * mpi^4) * lecr[8])) / (3.0 * fpi^4)) / 2.0
end

# -  -  -  -  -  -  -  -  -  -  -  -  -  - I = 1 -  -  -  -  -  -  -  -  -  -  -  -  -  -
# channels -  -  - 1: pi pi;  2: pi eta; 3: KK bar;
function V2_I1_ππππ(s, x)
    t, u = tu(ππ, ππ, s, x)
    return  (( - mpi^2 + t) / fpi^2 - ( - mpi^2 + u) / fpi^2) / 2.0
end

function V4_I1_ππππ(s, x, lecr)
    t, u = tu(ππ, ππ, s, x)
    return ( - (mupi * (9 * mpi^4 - 4 * mpi^2 * t + 4 * t^2 - 4 * s * u)) / (3.0 * fpi^2 * mpi^2) - (muk * (2 * mpi^2 * t + t^2 - s * u)) / (6.0 * fpi^2 * mk^2) + ( - 56 * mpi^4 + 30 * (mpi^2 - t) * t + 21 * s * u) / (576.0 * fpi^4 * pi^2) - ( - 56 * mpi^4 + 21 * s * t + 30 * (mpi^2 - u) * u) / (576.0 * fpi^4 * pi^2) + (muk * ( - (s * t) + 2 * mpi^2 * u + u^2)) / (6.0 * fpi^2 * mk^2) + (mupi * (9 * mpi^4 - 4 * s * t - 4 * mpi^2 * u + 4 * u^2)) / (3.0 * fpi^2 * mpi^2) - ((( - 4 * mk^2 + s) * ( - 4 * mpi^2 + s + 2 * u) * jbar(s, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 + s - 2 * t) + s * (s - t)) * jbar(s, mpi, mpi)) / (6.0 * fpi^4) + ((( - 4 * mk^2 + s) * ( - 4 * mpi^2 + s + 2 * t) * jbar(s, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 + s - 2 * u) + s * (s - u)) * jbar(s, mpi, mpi)) / (6.0 * fpi^4) + ((mpi^4 * jbar(t, meta, meta)) / 9.0 + (t^2 * jbar(t, mk, mk)) / 4.0 + ( - mpi^4 + t^2) * jbar(t, mpi, mpi)) / (2.0 * fpi^4) - ((( - 4 * mk^2 + t) * ( - 4 * mpi^2 + t + 2 * u) * jbar(t, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 - 2 * s + t) + t * ( - s + t)) * jbar(t, mpi, mpi)) / (6.0 * fpi^4) - ((mpi^4 * jbar(u, meta, meta)) / 9.0 + (u^2 * jbar(u, mk, mk)) / 4.0 + ( - mpi^4 + u^2) * jbar(u, mpi, mpi)) / (2.0 * fpi^4) + ((( - 4 * mk^2 + u) * ( - 4 * mpi^2 + 2 * t + u) * jbar(u, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 - 2 * s + u) + u * ( - s + u)) * jbar(u, mpi, mpi)) / (6.0 * fpi^4) + (4 * ((( - 2 * mpi^2 + s)^2 + ( - 2 * mpi^2 + u)^2) * lecr[2] + ( - 2 * mpi^2 + t)^2 * (2 * lecr[1] + lecr[3]))) / fpi^4 - (4 * ((( - 2 * mpi^2 + s)^2 + ( - 2 * mpi^2 + t)^2) * lecr[2] + ( - 2 * mpi^2 + u)^2 * (2 * lecr[1] + lecr[3]))) / fpi^4 + (8 * mpi^2 * (t * (2 * lecr[4] + lecr[5]) + 2 * mpi^2 * ( - 2 * lecr[4] - lecr[5] + 2 * lecr[6] + lecr[8]))) / fpi^4 - (8 * mpi^2 * (u * (2 * lecr[4] + lecr[5]) + 2 * mpi^2 * ( - 2 * lecr[4] - lecr[5] + 2 * lecr[6] + lecr[8]))) / fpi^4) / 2.0
end


function V2_I1_πππη(s, x)
    return  0.0
end

function V4_I1_πππη(s, x, lecr)
    return 0.0
end


function V2_I1_ππkk(s, x)
    t, u = tu(ππ, KK, s, x)
    return  ( - (mk^2 + mpi^2 - t) / (2.0 * fpi^2) + (mk^2 + mpi^2 - u) / (2.0 * fpi^2)) / sqrt(2)
end

function V4_I1_ππkk(s, x, lecr)
    t, u = tu(ππ, KK, s, x)
    return ( - ( - 27 * mk^4 + 3 * s * ( - 10 * s + t) - 3 * mpi^2 * (mpi^2 + s - 2 * t - 3 * u) - 6 * t * u - 3 * u^2 + mk^2 * ( - 34 * mpi^2 - 3 * s + 30 * t + 21 * u)) / (1152.0 * fpi^4 * pi^2) + ( - 27 * mk^4 - 3 * t^2 - 3 * mpi^2 * (mpi^2 + s - 3 * t - 2 * u) - 6 * t * u + 3 * s * ( - 10 * s + u) + mk^2 * ( - 34 * mpi^2 - 3 * s + 21 * t + 30 * u)) / (1152.0 * fpi^4 * pi^2) - (muk * (42 * mk^6 + 4 * mk^4 * (12 * mpi^2 - 13 * t - 8 * u) - mpi^2 * (2 * mk^2 - s) * ( - 9 * mpi^2 + 5 * t + 4 * u) + mk^2 * (11 * t^2 - 3 * mpi^2 * (8 * mpi^2 + t - u) + 12 * t * u + 7 * u^2))) / (12.0 * fpi^2 * mk^2 * ( - mk^2 + mpi^2)) + (muk * (42 * mk^6 + 4 * mk^4 * (12 * mpi^2 - 8 * t - 13 * u) - mpi^2 * (2 * mk^2 - s) * ( - 9 * mpi^2 + 4 * t + 5 * u) + mk^2 * (7 * t^2 + 12 * t * u + 11 * u^2 - 3 * mpi^2 * (8 * mpi^2 - t + u)))) / (12.0 * fpi^2 * mk^2 * ( - mk^2 + mpi^2)) + (mupi * ( - 66 * mpi^6 + 2 * mk^2 * (2 * mpi^2 - s) * ( - 12 * mk^2 + 5 * t + 7 * u) + mpi^4 * ( - 78 * mk^2 + 53 * t + 85 * u) - mpi^2 * (25 * t^2 + 21 * t * u + 26 * u^2 - 3 * mk^2 * (16 * mk^2 + 5 * t + u)))) / (24.0 * fpi^2 * mpi^2 * ( - mk^2 + mpi^2)) + (mueta * (81 * meta^6 + 41 * mpi^6 - 18 * mpi^4 * (t + u) + meta^2 * ( - 59 * mpi^4 + 36 * t * ( - t + u) + 9 * mpi^2 * (5 * t + u)) - 3 * meta^4 * ( - 43 * mpi^2 + 9 * (t + 5 * u)))) / (72.0 * fpi^2 * meta^2 * (meta^2 - mpi^2)) - (mueta * (81 * meta^6 + 41 * mpi^6 - 18 * mpi^4 * (t + u) - 3 * meta^4 * ( - 43 * mpi^2 + 9 * (5 * t + u)) + meta^2 * ( - 59 * mpi^4 + 36 * (t - u) * u + 9 * mpi^2 * (t + 5 * u)))) / (72.0 * fpi^2 * meta^2 * (meta^2 - mpi^2)) - (mupi * ( - 66 * mpi^6 + 2 * mk^2 * (2 * mpi^2 - s) * ( - 12 * mk^2 + 7 * t + 5 * u) + mpi^4 * ( - 78 * mk^2 + 85 * t + 53 * u) - mpi^2 * (26 * t^2 + 21 * t * u + 25 * u^2 - 3 * mk^2 * (16 * mk^2 + t + 5 * u)))) / (24.0 * fpi^2 * mpi^2 * ( - mk^2 + mpi^2)) - (( - 4 * mk^4 + s * (mpi^2 + 4 * s - t) + mk^2 * ( - 4 * mpi^2 + 3 * s + 4 * t)) * jbar(s, mk, mk)) / (24.0 * fpi^4) + (( - 4 * mk^4 + s * (mpi^2 + 4 * s - u) + mk^2 * ( - 4 * mpi^2 + 3 * s + 4 * u)) * jbar(s, mk, mk)) / (24.0 * fpi^4) - (( - 8 * mpi^4 + s * (2 * mk^2 + 5 * s - 2 * t) + mpi^2 * ( - 8 * mk^2 + 3 * s + 8 * t)) * jbar(s, mpi, mpi)) / (24.0 * fpi^4) + (( - 8 * mpi^4 + s * (2 * mk^2 + 5 * s - 2 * u) + mpi^2 * ( - 8 * mk^2 + 3 * s + 8 * u)) * jbar(s, mpi, mpi)) / (24.0 * fpi^4) + ((29 * mk^4 + 38 * mpi^4 - mpi^2 * ( - 48 * meta^2 + 36 * t) + 2 * mk^2 * ( - 51 * meta^2 - 74 * mpi^2 + 18 * t + 27 * u) - 9 * (meta^4 - 6 * meta^2 * u + 3 * t * ( - t + u))) * jbar(t, mk, meta)) / (432.0 * fpi^4) - ((2 * mk^6 + 10 * meta^2 * mpi^4 + 3 * meta^4 * u + mk^4 * (10 * meta^2 - 4 * mpi^2 + 3 * u) - 2 * mk^2 * (3 * meta^4 + 2 * mpi^4 + meta^2 * (4 * mpi^2 + 3 * u))) * jbar(t, mk, meta)) / (48.0 * fpi^4 * t) - ((mk^2 + mpi^2 - t)^2 * jbar(t, mpi, mk)) / (4.0 * fpi^4) - ((mk^2 - mpi^2)^2 * ( - 2 * mk^2 - 2 * mpi^2 + u) * jbar(t, mpi, mk)) / (16.0 * fpi^4 * t) - ((5 * mk^4 + 5 * mpi^4 + t * ( - 5 * t + u) - 2 * mpi^2 * ( - 2 * t + u) - 2 * mk^2 * (5 * mpi^2 - 2 * t + u)) * jbar(t, mpi, mk)) / (16.0 * fpi^4) + ((2 * mk^6 + 10 * meta^2 * mpi^4 + 3 * meta^4 * t + mk^4 * (10 * meta^2 - 4 * mpi^2 + 3 * t) - 2 * mk^2 * (3 * meta^4 + 2 * mpi^4 + meta^2 * (4 * mpi^2 + 3 * t))) * jbar(u, mk, meta)) / (48.0 * fpi^4 * u) - ((29 * mk^4 + 38 * mpi^4 + 2 * mk^2 * ( - 51 * meta^2 - 74 * mpi^2 + 27 * t + 18 * u) - mpi^2 * ( - 48 * meta^2 + 36 * u) - 9 * (meta^4 - 6 * meta^2 * t + 3 * (t - u) * u)) * jbar(u, mk, meta)) / (432.0 * fpi^4) + ((mk^2 + mpi^2 - u)^2 * jbar(u, mpi, mk)) / (4.0 * fpi^4) + ((mk^2 - mpi^2)^2 * ( - 2 * mk^2 - 2 * mpi^2 + t) * jbar(u, mpi, mk)) / (16.0 * fpi^4 * u) + ((5 * mk^4 + 5 * mpi^4 - 2 * mpi^2 * (t - 2 * u) - 2 * mk^2 * (5 * mpi^2 + t - 2 * u) + (t - 5 * u) * u) * jbar(u, mpi, mk)) / (16.0 * fpi^4) + ((mk^2 - mpi^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(t, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(t, mpi, mk))) / (8.0 * fpi^4 * t^2) - ((mk^2 - mpi^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(u, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(u, mpi, mk))) / (8.0 * fpi^4 * u^2) - (2 * (2 * ( - mk^2 - mpi^2 + t)^2 * lecr[2] + ( - 2 * mk^2 + s) * ( - 2 * mpi^2 + s) * (4 * lecr[1] + lecr[3]) + ( - mk^2 - mpi^2 + u)^2 * (2 * lecr[2] + lecr[3]) + 4 * (mpi^2 * s + mk^2 * ( - 4 * mpi^2 + s)) * lecr[4] - 2 * mpi^2 * (mk^2 - mpi^2 + t) * lecr[5] + 8 * mk^2 * mpi^2 * (2 * lecr[6] + lecr[8]))) / fpi^4 + (2 * (2 * ( - mk^2 - mpi^2 + u)^2 * lecr[2] + ( - 2 * mk^2 + s) * ( - 2 * mpi^2 + s) * (4 * lecr[1] + lecr[3]) + ( - mk^2 - mpi^2 + t)^2 * (2 * lecr[2] + lecr[3]) + 4 * (mpi^2 * s + mk^2 * ( - 4 * mpi^2 + s)) * lecr[4] - 2 * mpi^2 * (mk^2 - mpi^2 + u) * lecr[5] + 8 * mk^2 * mpi^2 * (2 * lecr[6] + lecr[8]))) / fpi^4) / sqrt(2)
end


function V2_I1_πηπη(s, x)
    t, u = tu(πη, πη, s, x)
    return   mpi^2 / (3.0 * fpi^2)
end

function V4_I1_πηπη(s, x, lecr)
    t, u = tu(πη, πη, s, x)
    return  ((4 * meta^4 * mpi^2 - meta^2 * mpi^4 + mpi^6) * mueta) / (9.0 * fpi^2 * meta^2 * ( - meta^2 + mpi^2)) - (mupi * ( - 9 * meta^2 * mpi^2 + 13 * mpi^4 + 6 * ( - meta^2 + mpi^2) * t)) / (9.0 * fpi^2 * ( - meta^2 + mpi^2)) + (77 * mpi^4 + mpi^2 * (154 * meta^2 - 72 * t) - 9 * ( - 9 * meta^4 + 8 * meta^2 * t + 3 * (s^2 + s * u + u^2))) / (576.0 * fpi^4 * pi^2) - (muk * ( - 25 * mpi^4 + 20 * mpi^2 * ( - 3 * meta^2 + t) + 3 * ( - 9 * meta^4 + 8 * meta^2 * t + 3 * (s^2 + s * u + u^2)))) / (6.0 * fpi^2 * mk^2) + ((( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * s)^2 * jbar(s, mk, mk)) / 24.0 + mpi^4 * jbar(s, mpi, meta)) / (9.0 * fpi^4) + ((mpi^2 * (16 * mk^2 - 7 * mpi^2) * jbar(t, meta, meta)) / 9.0 + (t * ( - 6 * meta^2 - 2 * mpi^2 + 9 * t) * jbar(t, mk, mk)) / 4.0 + mpi^2 * ( - mpi^2 + 2 * t) * jbar(t, mpi, mpi)) / (6.0 * fpi^4) + ((( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * u)^2 * jbar(u, mk, mk)) / 24.0 + mpi^4 * jbar(u, mpi, meta)) / (9.0 * fpi^4) + (4 * (2 * ( - 2 * meta^2 + t) * ( - 2 * mpi^2 + t) * (lecr[1] + lecr[3] / 6.0) + (( - meta^2 - mpi^2 + s)^2 + ( - meta^2 - mpi^2 + u)^2) * (lecr[2] + lecr[3] / 3.0))) / fpi^4 + (8 * (( - 4 * meta^2 * mpi^2 + (meta^2 + mpi^2) * t) * lecr[4] + 2 * meta^2 * mpi^2 * ( - lecr[5] / 3.0 + 2 * lecr[6]) + 4 * mpi^2 * ( - meta^2 + mpi^2) * lecr[7] + 2 * mpi^4 * lecr[8])) / fpi^4
end


function V2_I1_πηkk(s, x)
    t, u = tu(πη, KK, s, x)
    return  (3 * meta^2 + 8 * mk^2 + mpi^2 - 9 * s) / (6.0 * sqrt(6) * fpi^2)
end

function V4_I1_πηkk(s, x, lecr)
    t, u = tu(πη, KK, s, x)
    return  sqrt(2) * ((mupi * ( - 292 * mk^4 - 32 * mpi^4 + 12 * mpi^2 * (5 * mk^2 - 6 * s) + 174 * mk^2 * s + 27 * t^2 + 18 * t * u + 27 * u^2)) / (48.0 * sqrt(3) * fpi^2 * (mk^2 - mpi^2)) - (mueta * (2 * ( - 2 * meta^2 + mk^2) * (10 * meta^2 - 14 * mk^2 + 3 * s) + 3 * ( - t + u)^2)) / (16.0 * sqrt(3) * fpi^2 * ( - meta^2 + mk^2)) + ( - 16 * meta^4 - 192 * mk^4 - 23 * meta^2 * s + 5 * mk^2 * (24 * meta^2 + 13 * s) + 2 * (2 * t + u) * (t + 2 * u)) / (256.0 * sqrt(3) * fpi^4 * pi^2) - (muk * (24 * mk^6 + 4 * mk^4 * (17 * mpi^2 - 15 * s) + 9 * mpi^2 * s^2 + 2 * mk^2 * ( - 22 * mpi^4 + 6 * mpi^2 * s + 9 * ( - t + u)^2))) / (24.0 * sqrt(3) * fpi^2 * mk^2 * (mk^2 - mpi^2)) - (( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * s) * (3 * s * jbar(s, mk, mk) + 4 * mpi^2 * jbar(s, mpi, meta))) / (144.0 * sqrt(3) * fpi^4) + ((9 * ( - meta^2 + mk^2) * (10 * mk^4 + 2 * mpi^4 + mk^2 * (8 * meta^2 - 12 * mpi^2 + 3 * u) - meta^2 * (8 * mpi^2 + 3 * u)) * jbar(t, mk, meta)) / t + ( - 9 * meta^4 - 45 * mk^4 + 14 * mpi^4 + mk^2 * (156 * meta^2 + 22 * mpi^2 + 36 * t - 54 * u) + 27 * t * ( - t + u) - 6 * meta^2 * (7 * mpi^2 + 9 * u)) * jbar(t, mk, meta) + (9 * (mk^2 - mpi^2)^2 * ( - 2 * mk^2 + 2 * mpi^2 + 3 * u) * jbar(t, mpi, mk)) / t + 3 * (29 * mk^4 + 7 * mpi^4 + 3 * t * ( - 4 * meta^2 + 9 * t + 3 * u) - 2 * mk^2 * (3 * meta^2 - 18 * mpi^2 + 16 * t + 9 * u) - mpi^2 * ( - 30 * meta^2 + 40 * t + 18 * u)) * jbar(t, mpi, mk) - (54 * ( - meta^2 + mk^2)^3 * (mk^2 - mpi^2) * jbbar(t, mk, meta)) / t^2 - (54 * ( - meta^2 + mk^2) * (mk^2 - mpi^2)^3 * jbbar(t, mpi, mk)) / t^2) / (288.0 * sqrt(3) * fpi^4) + ((9 * ( - meta^2 + mk^2) * (10 * mk^4 + 2 * mpi^4 + mk^2 * (8 * meta^2 - 12 * mpi^2 + 3 * t) - meta^2 * (8 * mpi^2 + 3 * t)) * jbar(u, mk, meta)) / u + ( - 9 * meta^4 - 45 * mk^4 + 14 * mpi^4 - 6 * meta^2 * (7 * mpi^2 + 9 * t) + 27 * (t - u) * u + mk^2 * (156 * meta^2 + 22 * mpi^2 - 54 * t + 36 * u)) * jbar(u, mk, meta) + (9 * (mk^2 - mpi^2)^2 * ( - 2 * mk^2 + 2 * mpi^2 + 3 * t) * jbar(u, mpi, mk)) / u + 3 * (29 * mk^4 + 7 * mpi^4 + 3 * u * ( - 4 * meta^2 + 3 * t + 9 * u) - 2 * mk^2 * (3 * meta^2 - 18 * mpi^2 + 9 * t + 16 * u) - mpi^2 * ( - 30 * meta^2 + 18 * t + 40 * u)) * jbar(u, mpi, mk) - (54 * ( - meta^2 + mk^2)^3 * (mk^2 - mpi^2) * jbbar(u, mk, meta)) / u^2 - (54 * ( - meta^2 + mk^2) * (mk^2 - mpi^2)^3 * jbbar(u, mpi, mk)) / u^2) / (288.0 * sqrt(3) * fpi^4) - ((2 * meta^4 - 30 * mk^4 - 2 * meta^2 * s + 6 * mk^2 * (2 * meta^2 + s) + t^2 + 4 * t * u + u^2) * lecr[3]) / (sqrt(3) * fpi^4) + ( - 6 * mpi^2 * ( - meta^2 + s) * lecr[5] + 3 * mpi^4 * (lecr[5] - 2 * (2 * lecr[7] + lecr[8])) + meta^4 * ( - lecr[5] + 6 * (2 * lecr[7] + lecr[8]))) / (sqrt(3) * fpi^4))
end


function V2_I1_kkkk(s, x)
    t, u = tu(KK, KK, s, x)
    return (2 * mk^2 - u) / (2.0 * fpi^2)
end

function V4_I1_kkkk(s, x, lecr)
    t, u = tu(KK, KK, s, x)
    return - (mueta * (14 * mk^2 - mpi^2 - ( - 2 * mpi^2 + 9 * s)^2 / (12.0 * meta^2) + (8 * mk^2 * (2 * mk^2 + 3 * s - 6 * t) - 9 * (s^2 - 2 * t^2)) / (2.0 * ( - meta^2 + mpi^2)) + 9 * (s - u))) / (12.0 * fpi^2) + ( - 1648 * mk^4 + 186 * s * t + 1032 * mk^2 * u - 177 * u^2) / (2304.0 * fpi^4 * pi^2) - (muk * ( - 8 * mk^4 + 5 * (s^2 + s * t + t^2) - 13 * mk^2 * u + 6 * u^2)) / (6.0 * fpi^2 * mk^2) + (muk * (36 * mk^4 + 5 * s^2 - s * u + 8 * u^2 - 2 * mk^2 * (s + 16 * u))) / (12.0 * fpi^2 * mk^2) + (mupi * (5 * ( - 2 * mk^2 + u) - ( - 32 * mk^4 + 11 * s^2 + 8 * s * t + 11 * t^2 + 8 * mk^2 * u) / (24.0 * mpi^2) + ( - 64 * mk^4 + 9 * (s^2 + t^2) + 24 * mk^2 * u) / (16.0 * (mk^2 - mpi^2)))) / (2.0 * fpi^2) + (mueta * (64 * mk^2 - 2 * mpi^2 - (8 * mpi^4 - 36 * mpi^2 * (s + t) + 81 * (s^2 + t^2)) / (12.0 * meta^2) - 27 * u + ( - 64 * mk^4 + 9 * (s^2 + t^2) + 24 * mk^2 * u) / (2.0 * ( - meta^2 + mpi^2)))) / (12.0 * fpi^2) + ( - 4 * mk^2 * ( - 80 * mk^2 + 30 * s + 57 * u) + 3 * (31 * s^2 + 4 * s * u + 16 * u^2)) / (2304.0 * fpi^4 * pi^2) - (mupi * ((16 * mk^4 + 24 * mk^2 * (s - 2 * t) - 9 * (s^2 - 2 * t^2)) / (8.0 * (mk^2 - mpi^2)) + 5 * ( - 2 * mk^2 + u) - (11 * s^2 + 4 * t^2 - 8 * mk^2 * (s + 2 * t) + 4 * s * (2 * t + u)) / (12.0 * mpi^2))) / (4.0 * fpi^2) - (( - 6 * meta^2 - 2 * mpi^2 + 9 * s)^2 * jbar(s, meta, meta)) / (288.0 * fpi^4) - ((4 * mk^2 * (2 * mk^2 - t) + s * (s - u)) * jbar(s, mk, mk)) / (6.0 * fpi^4) + (( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * s)^2 * jbar(s, mpi, meta)) / (432.0 * fpi^4) - ((s * (8 * mk^2 + 7 * s - 4 * t) + 8 * mpi^2 * ( - 4 * mk^2 + s + 2 * t)) * jbar(s, mpi, mpi)) / (96.0 * fpi^4) + (( - 6 * meta^2 - 2 * mpi^2 + 9 * s)^2 * jbar(s, meta, meta) + 60 * ( - 8 * mk^4 + s * (2 * s + t) + 4 * mk^2 * u) * jbar(s, mk, mk) + (2 * ( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * s)^2 * jbar(s, mpi, meta)) / 3.0 + 3 * ( - 8 * mpi^2 * ( - 4 * mk^2 + s + 2 * t) + s * ( - 8 * mk^2 + 11 * s + 4 * t)) * jbar(s, mpi, mpi)) / (288.0 * fpi^4) - (( - 8 * mk^4 + t * (s + 2 * t) + 4 * mk^2 * u) * jbar(t, mk, mk)) / (24.0 * fpi^4) - (( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * t)^2 * jbar(t, mpi, meta)) / (216.0 * fpi^4) - (( - 4 * mpi^2 + t) * ( - 4 * mk^2 + 2 * s + t) * jbar(t, mpi, mpi)) / (24.0 * fpi^4) + (( - 6 * meta^2 - 2 * mpi^2 + 9 * t)^2 * jbar(t, meta, meta) + 60 * ( - 8 * mk^4 + t * (s + 2 * t) + 4 * mk^2 * u) * jbar(t, mk, mk) + (2 * ( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * t)^2 * jbar(t, mpi, meta)) / 3.0 + 3 * ( - 8 * mpi^2 * ( - 4 * mk^2 + 2 * s + t) + t * ( - 8 * mk^2 + 4 * s + 11 * t)) * jbar(t, mpi, mpi)) / (288.0 * fpi^4) + (( - 2 * mk^2 + u)^2 * jbar(u, mk, mk)) / (4.0 * fpi^4) - (2 * (2 * ( - 2 * mk^2 + u)^2 * lecr[2] + ( - 2 * mk^2 + s)^2 * (4 * lecr[1] + lecr[3]) + ( - 2 * mk^2 + t)^2 * (2 * lecr[2] + lecr[3]))) / fpi^4 + (4 * (2 * ( - 2 * mk^2 + u)^2 * lecr[2] + (( - 2 * mk^2 + s)^2 + ( - 2 * mk^2 + t)^2) * (2 * lecr[1] + lecr[2] + lecr[3]) - 4 * mk^2 * u * lecr[4] - 2 * mpi^2 * ( - 2 * mk^2 + u) * lecr[5] - 4 * mk^4 * (lecr[5] - 2 * (2 * lecr[6] + lecr[8])))) / fpi^4 - (4 * (4 * mk^2 * s * lecr[4] - mpi^2 * ( - 2 * mk^2 + u) * lecr[5] - 2 * mk^4 * (4 * lecr[4] + lecr[5] - 2 * (2 * lecr[6] + lecr[8])))) / fpi^4
end


 # -  -  -  -  -  -  -  -  -  -  -  -  -  - I = 1 / 2 -  -  -  -  -  -  -  -  -  -  -  -  -  -
 # channels -  -  - 1: K pi;  2: K eta
function V2_I1_kπkπ(s, x)
    t, u = tu(Kπ, Kπ, s, x)
    return - (mk^2 + mpi^2 - s) / (4 * fpi^2) + (3 * (mk^2 + mpi^2 - u)) / (4 * fpi^2)
end

function V4_I1_kπkπ(s, x, lecr)
    t, u = tu(Kπ, Kπ, s, x)
    return ( - ( - 27 * mk^4 + 3 * (s - 10 * t) * t - 3 * mpi^2 * (mpi^2 - 2 * s + t - 3 * u) - 6 * s * u - 3 * u^2 + mk^2 * ( - 34 * mpi^2 + 30 * s - 3 * t + 21 * u)) / (1152.0 * fpi^4 * pi^2) - (muk * (42 * mk^6 + 4 * mk^4 * (12 * mpi^2 - 13 * s - 8 * u) - mpi^2 * (2 * mk^2 - t) * ( - 9 * mpi^2 + 5 * s + 4 * u) + mk^2 * (11 * s^2 - 3 * mpi^2 * (8 * mpi^2 + s - u) + 12 * s * u + 7 * u^2))) / (12.0 * fpi^2 * mk^2 * ( - mk^2 + mpi^2)) - (mueta * (81 * meta^6 + 41 * mpi^6 - 18 * mpi^4 * (s + u) - 3 * meta^4 * ( - 43 * mpi^2 + 9 * (5 * s + u)) + meta^2 * ( - 59 * mpi^4 + 36 * (s - u) * u + 9 * mpi^2 * (s + 5 * u)))) / (72.0 * fpi^2 * meta^2 * (meta^2 - mpi^2)) - (mupi * ( - 66 * mpi^6 + 2 * mk^2 * (2 * mpi^2 - t) * ( - 12 * mk^2 + 7 * s + 5 * u) + mpi^4 * ( - 78 * mk^2 + 85 * s + 53 * u) - mpi^2 * (26 * s^2 + 21 * s * u + 25 * u^2 - 3 * mk^2 * (16 * mk^2 + s + 5 * u)))) / (24.0 * fpi^2 * mpi^2 * ( - mk^2 + mpi^2)) - ((mk^2 + mpi^2 - s)^2 * jbar(s, mpi, mk)) / (4.0 * fpi^4) + (mpi^2 * (6 * meta^2 + 2 * mpi^2 - 9 * t) * jbar(t, meta, meta)) / (72.0 * fpi^4) - (( - 4 * mk^4 + mk^2 * ( - 4 * mpi^2 + 4 * s + 3 * t) + t * (mpi^2 - s + 4 * t)) * jbar(t, mk, mk)) / (24.0 * fpi^4) - (( - 8 * mpi^4 + mpi^2 * ( - 8 * mk^2 + 8 * s + 3 * t) + t * (2 * mk^2 - 2 * s + 5 * t)) * jbar(t, mpi, mpi)) / (24.0 * fpi^4) + ((2 * mk^6 + 10 * meta^2 * mpi^4 + 3 * meta^4 * s + mk^4 * (10 * meta^2 - 4 * mpi^2 + 3 * s) - 2 * mk^2 * (3 * meta^4 + 2 * mpi^4 + meta^2 * (4 * mpi^2 + 3 * s))) * jbar(u, mk, meta)) / (48.0 * fpi^4 * u) - ((29 * mk^4 + 38 * mpi^4 + 2 * mk^2 * ( - 51 * meta^2 - 74 * mpi^2 + 27 * s + 18 * u) - mpi^2 * ( - 48 * meta^2 + 36 * u) - 9 * (meta^4 - 6 * meta^2 * s + 3 * (s - u) * u)) * jbar(u, mk, meta)) / (432.0 * fpi^4) + ((mk^2 - mpi^2)^2 * ( - 2 * mk^2 - 2 * mpi^2 + s) * jbar(u, mpi, mk)) / (16.0 * fpi^4 * u) + ((5 * mk^4 + 5 * mpi^4 - 2 * mpi^2 * (s - 2 * u) - 2 * mk^2 * (5 * mpi^2 + s - 2 * u) + (s - 5 * u) * u) * jbar(u, mpi, mk)) / (16.0 * fpi^4) - ((mk^2 - mpi^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(u, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(u, mpi, mk))) / (8.0 * fpi^4 * u^2) - (2 * (2 * ( - mk^2 - mpi^2 + s)^2 * lecr[2] + ( - 2 * mk^2 + t) * ( - 2 * mpi^2 + t) * (4 * lecr[1] + lecr[3]) + ( - mk^2 - mpi^2 + u)^2 * (2 * lecr[2] + lecr[3]) + 4 * (mpi^2 * t + mk^2 * ( - 4 * mpi^2 + t)) * lecr[4] - 2 * mpi^2 * (mk^2 - mpi^2 + s) * lecr[5] + 8 * mk^2 * mpi^2 * (2 * lecr[6] + lecr[8]))) / fpi^4) / 2.0 + (3 * (( - 27 * mk^4 - 3 * s^2 - 3 * mpi^2 * (mpi^2 - 3 * s + t - 2 * u) - 6 * s * u + 3 * t * ( - 10 * t + u) + mk^2 * ( - 34 * mpi^2 + 21 * s - 3 * t + 30 * u)) / (1152.0 * fpi^4 * pi^2) + (muk * (42 * mk^6 + 4 * mk^4 * (12 * mpi^2 - 8 * s - 13 * u) - mpi^2 * (2 * mk^2 - t) * ( - 9 * mpi^2 + 4 * s + 5 * u) + mk^2 * (7 * s^2 + 12 * s * u + 11 * u^2 - 3 * mpi^2 * (8 * mpi^2 - s + u)))) / (12.0 * fpi^2 * mk^2 * ( - mk^2 + mpi^2)) + (mupi * ( - 66 * mpi^6 + 2 * mk^2 * (2 * mpi^2 - t) * ( - 12 * mk^2 + 5 * s + 7 * u) + mpi^4 * ( - 78 * mk^2 + 53 * s + 85 * u) - mpi^2 * (25 * s^2 + 21 * s * u + 26 * u^2 - 3 * mk^2 * (16 * mk^2 + 5 * s + u)))) / (24.0 * fpi^2 * mpi^2 * ( - mk^2 + mpi^2)) + (mueta * (81 * meta^6 + 41 * mpi^6 - 18 * mpi^4 * (s + u) + meta^2 * ( - 59 * mpi^4 + 36 * s * ( - s + u) + 9 * mpi^2 * (5 * s + u)) - 3 * meta^4 * ( - 43 * mpi^2 + 9 * (s + 5 * u)))) / (72.0 * fpi^2 * meta^2 * (meta^2 - mpi^2)) + ((29 * mk^4 + 38 * mpi^4 - mpi^2 * ( - 48 * meta^2 + 36 * s) + 2 * mk^2 * ( - 51 * meta^2 - 74 * mpi^2 + 18 * s + 27 * u) - 9 * (meta^4 - 6 * meta^2 * u + 3 * s * ( - s + u))) * jbar(s, mk, meta)) / (432.0 * fpi^4) - ((2 * mk^6 + 10 * meta^2 * mpi^4 + 3 * meta^4 * u + mk^4 * (10 * meta^2 - 4 * mpi^2 + 3 * u) - 2 * mk^2 * (3 * meta^4 + 2 * mpi^4 + meta^2 * (4 * mpi^2 + 3 * u))) * jbar(s, mk, meta)) / (48.0 * fpi^4 * s) - ((mk^2 - mpi^2)^2 * ( - 2 * mk^2 - 2 * mpi^2 + u) * jbar(s, mpi, mk)) / (16.0 * fpi^4 * s) - ((5 * mk^4 + 5 * mpi^4 + s * ( - 5 * s + u) - 2 * mpi^2 * ( - 2 * s + u) - 2 * mk^2 * (5 * mpi^2 - 2 * s + u)) * jbar(s, mpi, mk)) / (16.0 * fpi^4) - (mpi^2 * (6 * meta^2 + 2 * mpi^2 - 9 * t) * jbar(t, meta, meta)) / (72.0 * fpi^4) + (( - 4 * mk^4 + t * (mpi^2 + 4 * t - u) + mk^2 * ( - 4 * mpi^2 + 3 * t + 4 * u)) * jbar(t, mk, mk)) / (24.0 * fpi^4) + (( - 8 * mpi^4 + t * (2 * mk^2 + 5 * t - 2 * u) + mpi^2 * ( - 8 * mk^2 + 3 * t + 8 * u)) * jbar(t, mpi, mpi)) / (24.0 * fpi^4) + ((mk^2 + mpi^2 - u)^2 * jbar(u, mpi, mk)) / (4.0 * fpi^4) + ((mk^2 - mpi^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(s, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(s, mpi, mk))) / (8.0 * fpi^4 * s^2) + (2 * (2 * ( - mk^2 - mpi^2 + u)^2 * lecr[2] + ( - 2 * mk^2 + t) * ( - 2 * mpi^2 + t) * (4 * lecr[1] + lecr[3]) + ( - mk^2 - mpi^2 + s)^2 * (2 * lecr[2] + lecr[3]) + 4 * (mpi^2 * t + mk^2 * ( - 4 * mpi^2 + t)) * lecr[4] - 2 * mpi^2 * (mk^2 - mpi^2 + u) * lecr[5] + 8 * mk^2 * mpi^2 * (2 * lecr[6] + lecr[8]))) / fpi^4)) / 2.0
end


function V2_I1_kπkη(s, x)
    t, u = tu(Kπ, Kη, s, x)
    return - (3 * meta^2 + 8 * mk^2 + mpi^2 - 9 * t) / (12.0 * fpi^2)
end

function V4_I1_kπkη(s, x, lecr)
    t, u = tu(Kπ, Kη, s, x)
    return - (sqrt(3) * ( - (muk * (24 * mk^6 + 4 * mk^4 * (17 * mpi^2 - 15 * t) + 9 * mpi^2 * t^2 + 2 * mk^2 * ( - 22 * mpi^4 + 6 * mpi^2 * t + 9 * (s - u)^2))) / (24.0 * sqrt(3) * fpi^2 * mk^2 * (mk^2 - mpi^2)) - (mueta * (2 * ( - 2 * meta^2 + mk^2) * (10 * meta^2 - 14 * mk^2 + 3 * t) + 3 * (s - u)^2)) / (16.0 * sqrt(3) * fpi^2 * ( - meta^2 + mk^2)) + (mupi * ( - 292 * mk^4 - 32 * mpi^4 + 27 * s^2 + 12 * mpi^2 * (5 * mk^2 - 6 * t) + 174 * mk^2 * t + 18 * s * u + 27 * u^2)) / (48.0 * sqrt(3) * fpi^2 * (mk^2 - mpi^2)) + ( - 16 * meta^4 - 192 * mk^4 - 23 * meta^2 * t + 5 * mk^2 * (24 * meta^2 + 13 * t) + 2 * (2 * s + u) * (s + 2 * u)) / (256.0 * sqrt(3) * fpi^4 * pi^2) - (( - 3 * meta^2 - 8 * mk^2 - mpi^2 + 9 * t) * (3 * t * jbar(t, mk, mk) + 4 * mpi^2 * jbar(t, mpi, meta))) / (144.0 * sqrt(3) * fpi^4) + ((9 * ( - meta^2 + mk^2) * (10 * mk^4 + 2 * mpi^4 + mk^2 * (8 * meta^2 - 12 * mpi^2 + 3 * u) - meta^2 * (8 * mpi^2 + 3 * u)) * jbar(s, mk, meta)) / s + ( - 9 * meta^4 - 45 * mk^4 + 14 * mpi^4 + mk^2 * (156 * meta^2 + 22 * mpi^2 + 36 * s - 54 * u) + 27 * s * ( - s + u) - 6 * meta^2 * (7 * mpi^2 + 9 * u)) * jbar(s, mk, meta) + (9 * (mk^2 - mpi^2)^2 * ( - 2 * mk^2 + 2 * mpi^2 + 3 * u) * jbar(s, mpi, mk)) / s + 3 * (29 * mk^4 + 7 * mpi^4 + 3 * s * ( - 4 * meta^2 + 9 * s + 3 * u) - 2 * mk^2 * (3 * meta^2 - 18 * mpi^2 + 16 * s + 9 * u) - mpi^2 * ( - 30 * meta^2 + 40 * s + 18 * u)) * jbar(s, mpi, mk) - (54 * ( - meta^2 + mk^2)^3 * (mk^2 - mpi^2) * jbbar(s, mk, meta)) / s^2 - (54 * ( - meta^2 + mk^2) * (mk^2 - mpi^2)^3 * jbbar(s, mpi, mk)) / s^2) / (288.0 * sqrt(3) * fpi^4) + ((9 * ( - meta^2 + mk^2) * (10 * mk^4 + 2 * mpi^4 + mk^2 * (8 * meta^2 - 12 * mpi^2 + 3 * s) - meta^2 * (8 * mpi^2 + 3 * s)) * jbar(u, mk, meta)) / u + ( - 9 * meta^4 - 45 * mk^4 + 14 * mpi^4 - 6 * meta^2 * (7 * mpi^2 + 9 * s) + 27 * (s - u) * u + mk^2 * (156 * meta^2 + 22 * mpi^2 - 54 * s + 36 * u)) * jbar(u, mk, meta) + (9 * (mk^2 - mpi^2)^2 * ( - 2 * mk^2 + 2 * mpi^2 + 3 * s) * jbar(u, mpi, mk)) / u + 3 * (29 * mk^4 + 7 * mpi^4 + 3 * u * ( - 4 * meta^2 + 3 * s + 9 * u) - 2 * mk^2 * (3 * meta^2 - 18 * mpi^2 + 9 * s + 16 * u) - mpi^2 * ( - 30 * meta^2 + 18 * s + 40 * u)) * jbar(u, mpi, mk) - (54 * ( - meta^2 + mk^2)^3 * (mk^2 - mpi^2) * jbbar(u, mk, meta)) / u^2 - (54 * ( - meta^2 + mk^2) * (mk^2 - mpi^2)^3 * jbbar(u, mpi, mk)) / u^2) / (288.0 * sqrt(3) * fpi^4) - ((2 * meta^4 - 30 * mk^4 + s^2 - 2 * meta^2 * t + 6 * mk^2 * (2 * meta^2 + t) + 4 * s * u + u^2) * lecr[3]) / (sqrt(3) * fpi^4) + ( - 6 * mpi^2 * ( - meta^2 + t) * lecr[5] + 3 * mpi^4 * (lecr[5] - 2 * (2 * lecr[7] + lecr[8])) + meta^4 * ( - lecr[5] + 6 * (2 * lecr[7] + lecr[8]))) / (sqrt(3) * fpi^4)))
end


function V2_I1_kηkη(s, x)
    t, u = tu(Kη, Kη, s, x)
    return ( - 6 * meta^2 - 2 * mpi^2 + 9 * t) / (12.0 * fpi^2)
end

function V4_I1_kηkη(s, x, lecr)
    t, u = tu(Kη, Kη, s, x)
    return - (mupi * ( - 84 * mk^4 + 2 * mk^2 * (26 * meta^2 + 69 * t) + 3 * (16 * meta^4 - 50 * meta^2 * t + (s - u)^2))) / (48.0 * fpi^2 * ( - meta^2 + mk^2)) + (mueta * (144 * meta^6 - 128 * mk^6 + 144 * mk^4 * t + 2 * meta^4 * ( - 166 * mk^2 + 153 * t) + meta^2 * (428 * mk^4 - 486 * mk^2 * t + 27 * (s - u)^2))) / (144.0 * fpi^2 * meta^2 * ( - meta^2 + mk^2)) - (muk * (92 * mk^6 - 81 * meta^2 * t^2 - 60 * mk^4 * (meta^2 + 3 * t) + 18 * mk^2 * (8 * meta^4 + 6 * meta^2 * t + 5 * t^2 - 2 * s * u))) / (72.0 * fpi^2 * mk^2 * ( - meta^2 + mk^2)) + (116 * mk^4 + mk^2 * (184 * meta^2 - 153 * t) - 9 * (4 * meta^4 - 3 * meta^2 * t + 10 * t^2 + 2 * s * u)) / (2304.0 * fpi^4 * pi^2) + ((16 * mk^2 - 7 * mpi^2) * ( - 6 * meta^2 - 2 * mpi^2 + 9 * t) * jbar(t, meta, meta)) / (216.0 * fpi^4) + (t * ( - 6 * meta^2 - 2 * mpi^2 + 9 * t) * jbar(t, mk, mk)) / (16.0 * fpi^4) + (mpi^2 * t * jbar(t, mpi, mpi)) / (8.0 * fpi^4) + ((( - meta^2 + mk^2)^2 * ( - 6 * meta^2 - 18 * mk^2 + 4 * mpi^2 - 3 * u) * jbar(s, mk, meta)) / s + ((45 * meta^4 + 189 * mk^4 + 8 * mpi^4 + 12 * mpi^2 * ( - 2 * meta^2 + 3 * s) - 18 * mk^2 * (9 * meta^2 + 4 * mpi^2 + 6 * s - 3 * u) + 27 * s * (s - u) + 54 * meta^2 * u) * jbar(s, mk, meta)) / 9.0 + ((18 * meta^4 + 29 * mk^4 + 11 * mpi^4 + 27 * s * (s - u) + 6 * mpi^2 * (8 * meta^2 - 6 * s + 9 * u) + 2 * mk^2 * ( - 78 * meta^2 - 47 * mpi^2 + 18 * s + 27 * u)) * jbar(s, mpi, mk)) / 9.0 - ((2 * mk^6 - 2 * mk^2 * mpi^2 * (4 * meta^2 + 5 * mpi^2 + 3 * u) + mk^4 * ( - 8 * meta^2 + 14 * mpi^2 + 3 * u) + mpi^2 * (6 * meta^4 + mpi^2 * (4 * meta^2 + 3 * u))) * jbar(s, mpi, mk)) / s + (6 * ( - meta^2 + mk^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(s, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(s, mpi, mk))) / s^2) / (32.0 * fpi^4) + ((( - meta^2 + mk^2)^2 * ( - 6 * meta^2 - 18 * mk^2 + 4 * mpi^2 - 3 * s) * jbar(u, mk, meta)) / u + ((45 * meta^4 + 189 * mk^4 + 8 * mpi^4 + 54 * meta^2 * s + 27 * u * ( - s + u) + 12 * mpi^2 * ( - 2 * meta^2 + 3 * u) - 18 * mk^2 * (9 * meta^2 + 4 * mpi^2 - 3 * s + 6 * u)) * jbar(u, mk, meta)) / 9.0 - ((2 * mk^6 - 2 * mk^2 * mpi^2 * (4 * meta^2 + 5 * mpi^2 + 3 * s) + mk^4 * ( - 8 * meta^2 + 14 * mpi^2 + 3 * s) + mpi^2 * (6 * meta^4 + mpi^2 * (4 * meta^2 + 3 * s))) * jbar(u, mpi, mk)) / u + ((18 * meta^4 + 29 * mk^4 + 11 * mpi^4 + 6 * mpi^2 * (8 * meta^2 + 9 * s - 6 * u) + 27 * u * ( - s + u) + 2 * mk^2 * ( - 78 * meta^2 - 47 * mpi^2 + 27 * s + 18 * u)) * jbar(u, mpi, mk)) / 9.0 + (6 * ( - meta^2 + mk^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(u, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(u, mpi, mk))) / u^2) / (32.0 * fpi^4) + ((( - meta^2 - mk^2 + s)^2 + ( - meta^2 - mk^2 + u)^2) * (12 * lecr[2] + lecr[3]) + 2 * (2 * meta^2 - t) * (2 * mk^2 - t) * (12 * lecr[1] + 5 * lecr[3])) / (3.0 * fpi^4) - (2 * (12 * meta^4 + 3 * mpi^4 + mpi^2 * (5 * meta^2 - 9 * t)) * lecr[5]) / (3.0 * fpi^4) + (4 * (2 * (meta^2 + mk^2) * t * lecr[4] + 8 * meta^2 * mk^2 * ( - lecr[4] + lecr[6]) + 2 * (3 * meta^4 - 4 * meta^2 * mpi^2 + mpi^4) * lecr[7] + (6 * meta^4 - 3 * meta^2 * mpi^2 + mpi^4) * lecr[8])) / fpi^4
end


# -  -  -  -  -  -  -  -  -  -  -  -  -  - I = 3 / 2 -  -  -  -  -  -  -  -  -  -  -  -  -  -
# single channel -  -  - K pi
function V2_I3_kπkπ(s, x)
    t, u = tu(Kπ, Kπ, s, x)
    return (mk^2 + mpi^2 - s) / (2.0 * fpi^2)
end

function V4_I3_kπkπ(s, x, lecr)
    t, u = tu(Kπ, Kπ, s, x)
    return ( - 27 * mk^4 + 3 * (s - 10 * t) * t - 3 * mpi^2 * (mpi^2 - 2 * s + t - 3 * u) - 6 * s * u - 3 * u^2 + mk^2 * ( - 34 * mpi^2 + 30 * s - 3 * t + 21 * u)) / (1152.0 * fpi^4 * pi^2) + (muk * (42 * mk^6 + 4 * mk^4 * (12 * mpi^2 - 13 * s - 8 * u) - mpi^2 * (2 * mk^2 - t) * ( - 9 * mpi^2 + 5 * s + 4 * u) + mk^2 * (11 * s^2 - 3 * mpi^2 * (8 * mpi^2 + s - u) + 12 * s * u + 7 * u^2))) / (12.0 * fpi^2 * mk^2 * ( - mk^2 + mpi^2)) + (mueta * (81 * meta^6 + 41 * mpi^6 - 18 * mpi^4 * (s + u) - 3 * meta^4 * ( - 43 * mpi^2 + 9 * (5 * s + u)) + meta^2 * ( - 59 * mpi^4 + 36 * (s - u) * u + 9 * mpi^2 * (s + 5 * u)))) / (72.0 * fpi^2 * meta^2 * (meta^2 - mpi^2)) + (mupi * ( - 66 * mpi^6 + 2 * mk^2 * (2 * mpi^2 - t) * ( - 12 * mk^2 + 7 * s + 5 * u) + mpi^4 * ( - 78 * mk^2 + 85 * s + 53 * u) - mpi^2 * (26 * s^2 + 21 * s * u + 25 * u^2 - 3 * mk^2 * (16 * mk^2 + s + 5 * u)))) / (24.0 * fpi^2 * mpi^2 * ( - mk^2 + mpi^2)) + ((mk^2 + mpi^2 - s)^2 * jbar(s, mpi, mk)) / (4.0 * fpi^4) - (mpi^2 * (6 * meta^2 + 2 * mpi^2 - 9 * t) * jbar(t, meta, meta)) / (72.0 * fpi^4) + (( - 4 * mk^4 + mk^2 * ( - 4 * mpi^2 + 4 * s + 3 * t) + t * (mpi^2 - s + 4 * t)) * jbar(t, mk, mk)) / (24.0 * fpi^4) + (( - 8 * mpi^4 + mpi^2 * ( - 8 * mk^2 + 8 * s + 3 * t) + t * (2 * mk^2 - 2 * s + 5 * t)) * jbar(t, mpi, mpi)) / (24.0 * fpi^4) - ((2 * mk^6 + 10 * meta^2 * mpi^4 + 3 * meta^4 * s + mk^4 * (10 * meta^2 - 4 * mpi^2 + 3 * s) - 2 * mk^2 * (3 * meta^4 + 2 * mpi^4 + meta^2 * (4 * mpi^2 + 3 * s))) * jbar(u, mk, meta)) / (48.0 * fpi^4 * u) + ((29 * mk^4 + 38 * mpi^4 + 2 * mk^2 * ( - 51 * meta^2 - 74 * mpi^2 + 27 * s + 18 * u) - mpi^2 * ( - 48 * meta^2 + 36 * u) - 9 * (meta^4 - 6 * meta^2 * s + 3 * (s - u) * u)) * jbar(u, mk, meta)) / (432.0 * fpi^4) - ((mk^2 - mpi^2)^2 * ( - 2 * mk^2 - 2 * mpi^2 + s) * jbar(u, mpi, mk)) / (16.0 * fpi^4 * u) - ((5 * mk^4 + 5 * mpi^4 - 2 * mpi^2 * (s - 2 * u) - 2 * mk^2 * (5 * mpi^2 + s - 2 * u) + (s - 5 * u) * u) * jbar(u, mpi, mk)) / (16.0 * fpi^4) + ((mk^2 - mpi^2)^2 * (( - meta^2 + mk^2)^2 * jbbar(u, mk, meta) + (mk^2 - mpi^2)^2 * jbbar(u, mpi, mk))) / (8.0 * fpi^4 * u^2) + (2 * (2 * ( - mk^2 - mpi^2 + s)^2 * lecr[2] + ( - 2 * mk^2 + t) * ( - 2 * mpi^2 + t) * (4 * lecr[1] + lecr[3]) + ( - mk^2 - mpi^2 + u)^2 * (2 * lecr[2] + lecr[3]) + 4 * (mpi^2 * t + mk^2 * ( - 4 * mpi^2 + t)) * lecr[4] - 2 * mpi^2 * (mk^2 - mpi^2 + s) * lecr[5] + 8 * mk^2 * mpi^2 * (2 * lecr[6] + lecr[8]))) / fpi^4
end

 # -  -  -  -  -  -  -  -  -  -  -  -  -  - I = 2 -  -  -  -  -  -  -  -  -  -  -  -  -  -
 # single channel -  -  - pi pi
 function V2_I2_ππππ(s, x)
     t, u = tu(ππ, ππ, s, x)
     return  (( - mpi^2 + t) / fpi^2 + ( - mpi^2 + u) / fpi^2) / 2.0
 end

 function V4_I2_ππππ(s, x, lecr)
     t, u = tu(ππ, ππ, s, x)
     return (( - 2 * mpi^4 * mueta) / (9.0 * fpi^2 * meta^2) - (mupi * (9 * mpi^4 - 4 * mpi^2 * t + 4 * t^2 - 4 * s * u)) / (3.0 * fpi^2 * mpi^2) - (muk * (2 * mpi^2 * t + t^2 - s * u)) / (6.0 * fpi^2 * mk^2) + ( - 56 * mpi^4 + 30 * (mpi^2 - t) * t + 21 * s * u) / (576.0 * fpi^4 * pi^2) + ( - 56 * mpi^4 + 21 * s * t + 30 * (mpi^2 - u) * u) / (576.0 * fpi^4 * pi^2) - (muk * ( - (s * t) + 2 * mpi^2 * u + u^2)) / (6.0 * fpi^2 * mk^2) - (mupi * (9 * mpi^4 - 4 * s * t - 4 * mpi^2 * u + 4 * u^2)) / (3.0 * fpi^2 * mpi^2) + ((( - 4 * mk^2 + s) * ( - 4 * mpi^2 + s + 2 * u) * jbar(s, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 + s - 2 * t) + s * (s - t)) * jbar(s, mpi, mpi)) / (6.0 * fpi^4) + ((( - 4 * mk^2 + s) * ( - 4 * mpi^2 + s + 2 * t) * jbar(s, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 + s - 2 * u) + s * (s - u)) * jbar(s, mpi, mpi)) / (6.0 * fpi^4) + ((mpi^4 * jbar(t, meta, meta)) / 9.0 + (t^2 * jbar(t, mk, mk)) / 4.0 + ( - mpi^4 + t^2) * jbar(t, mpi, mpi)) / (2.0 * fpi^4) + ((( - 4 * mk^2 + t) * ( - 4 * mpi^2 + t + 2 * u) * jbar(t, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 - 2 * s + t) + t * ( - s + t)) * jbar(t, mpi, mpi)) / (6.0 * fpi^4) + ((mpi^4 * jbar(u, meta, meta)) / 9.0 + (u^2 * jbar(u, mk, mk)) / 4.0 + ( - mpi^4 + u^2) * jbar(u, mpi, mpi)) / (2.0 * fpi^4) + ((( - 4 * mk^2 + u) * ( - 4 * mpi^2 + 2 * t + u) * jbar(u, mk, mk)) / 4.0 + ( - 2 * mpi^2 * (mpi^2 - 2 * s + u) + u * ( - s + u)) * jbar(u, mpi, mpi)) / (6.0 * fpi^4) + (4 * ((( - 2 * mpi^2 + s)^2 + ( - 2 * mpi^2 + u)^2) * lecr[2] + ( - 2 * mpi^2 + t)^2 * (2 * lecr[1] + lecr[3]))) / fpi^4 + (4 * ((( - 2 * mpi^2 + s)^2 + ( - 2 * mpi^2 + t)^2) * lecr[2] + ( - 2 * mpi^2 + u)^2 * (2 * lecr[1] + lecr[3]))) / fpi^4 + (8 * mpi^2 * (t * (2 * lecr[4] + lecr[5]) + 2 * mpi^2 * ( - 2 * lecr[4] - lecr[5] + 2 * lecr[6] + lecr[8]))) / fpi^4 + (8 * mpi^2 * (u * (2 * lecr[4] + lecr[5]) + 2 * mpi^2 * ( - 2 * lecr[4] - lecr[5] + 2 * lecr[6] + lecr[8]))) / fpi^4) / 2.0
end;
